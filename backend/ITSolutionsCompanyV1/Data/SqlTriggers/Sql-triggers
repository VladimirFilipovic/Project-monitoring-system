--change EmployeeProject table -> numOfProjects AspNetUsers table
DROP TRIGGER trgEmployeeProject;
GO
CREATE TRIGGER trgEmployeeProject
on EmployeeProject
AFTER INSERT, UPDATE
AS
BEGIN
	declare @EmployeeId uniqueidentifier;
	declare @Deleted bit;
if update(EmployeeId)
	BEGIN
		declare ep_cursor cursor for
		select EmployeeId
		from inserted
		open ep_cursor

		fetch next from ep_cursor
			into @EmployeeId,@Deleted;
			
		while @@FETCH_STATUS = 0 
			BEGIN
				if @Deleted = 1 --ako je promenjen status projekta u obrisan
					begin
					update AspNetUsers
					set NumberOfActiveProjects -= 1
					where id = @EmployeeId
					end
				else --ako je insert
					begin 
					update AspNetUsers
					set NumberOfActiveProjects += 1
					where id = @EmployeeId
					end
				
				fetch next from ep_cursor
					into @EmployeeId;
END
close ep_cursor
			deallocate ep_cursor
	END
END

insert into EmployeeProject (EmployeeId, ProjectId, RoleOnProject, Deleted) 
values('8b1220d3-8d7a-4882-ad08-ed1a140934b6', '8b1220d3-8d7a-4882-ad08-ed1a140944b6', 'Dzabalebaros', 0);

select * from AspNetUsers
go

-------------------------------------------------------------------------

--create request -> send email to manager
DROP TRIGGER trgRemidner
GO;
CREATE TRIGGER trgReminder  
ON Requests 
AFTER INSERT, UPDATE, DELETE   
AS  
   EXEC msdb.dbo.sp_send_dbmail  
        @profile_name = 'AdventureWorks2012 Administrator',  
        @recipients = 'vlada.19982309@gmail.com',  
        @body = 'Don''t forget to print a report for the sales force.',  
        @subject = 'Reminder';  

insert into Requests (ClientId, Id, Name,Specification)
	values('8b1220d3-8d7a-4882-ad08-ed1a140934b6', '8b1220d3-8d7a-4882-ad08-ed1a140944b6', 'Dzabalebaros', (convert(VARBINARY(max), 'TestCase_TestCheck01_Mail_Validation')));
GO



--------------------------------------------------------------------
--soft delete, when deleted soft delete all relationships

--delete project -> all rel deleted
--isCompleted -> tasks completed, employee project -1
go
CREATE TRIGGER trgProjectTasks
ON Projects
AFTER UPDATE
AS
BEGIN
	declare @Completed bit;
	declare @Deleted bit;
	declare @CompletedPrev bit;
	declare @DeletedPrev bit;

	declare insert_cursor cursor for
	select Completed, Deleted
	from inserted;

	declare deleted_cursor cursor for 
	select Completed, Deleted
	from deleted;

	open deleted_cursor;
	open insert_cursor;

	fetch next from deleted_cursor
		into @CompletedPrev, @DeletedPrev;
	
	fetch next from insert_cursor
		into @Completed, @Deleted;

	WHILE @@FETCH_STATUS = 0 
		BEGIN
			IF(@Deleted > @DeletedPrev) --project deleted, delete all related tables 
				BEGIN
					update Documentations
				END
			IF(@Completed > @CompletedPrev) --project completed -> tasks complted, employee project deleted
				BEGIN
				END
		END
END
